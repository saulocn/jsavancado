{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","Promise","resolve","reject","get","then","negociacoes","map","Negociacao","Date","objeto","data","quantidade","valor","catch","console","log","erro","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","Error","negociacao","ConnectionFactory","getConnection","NegociacaoDao","connection","adiciona","Erro","dao","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negocicao","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\r\n\r\n    constructor(){\r\n        /*\r\n        0: requisição ainda não iniciada\r\n        1: conexão com o servidor estabelecida\r\n        2: requisição recebida\r\n        3: processando requisição\r\n        4: requisição está concluída e a resposta está pronta\r\n        */\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesDaSemana(){\r\n        return new Promise((resolve, reject)=> {\r\n            this._http.get('/negociacoes/semana')\r\n            .then( negociacoes => {\r\n                resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                reject(\"Não foi possível obter as negociações da semana!\");\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    obterNegociacoesDaSemanaAnterior(){\r\n        return new Promise((resolve, reject)=> {\r\n            this._http.get('/negociacoes/anterior')\r\n            .then( negociacoes => {\r\n                resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                reject(\"Não foi possível obter as negociações da semana anterior!\");\r\n            });\r\n        });\r\n    }\r\n    \r\n    \r\n    obterNegociacoesDaSemanaRetrasada(){\r\n        return new Promise((resolve, reject)=> {\r\n            this._http.get('/negociacoes/retrasada')\r\n            .then( negociacoes => {\r\n                resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                reject(\"Não foi possível obter as negociações da semana retrasada!\");\r\n            });\r\n        });\r\n    }   \r\n    \r\n    \r\n    obterNegociacoes() {\r\n        \r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), [])\r\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\r\n\r\n            return negociacoes;\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n    } \r\n    \r\n    cadastra(negociacao){\r\n        return ConnectionFactory.getConnection()\r\n        .then(connection=>{\r\n            new NegociacaoDao(connection)\r\n            .adiciona(negociacao)\r\n            .then(()=> 'Negociação adicionada com sucesso!')\r\n            .catch((erro) => {\r\n                console.log(erro);\r\n                throw new Erro(\"Não foi possível adicionar a negociação!\");\r\n            });\r\n        });\r\n    }\r\n\r\n    lista(){\r\n        return ConnectionFactory.getConnection()\r\n        .then(connection=> new NegociacaoDao(connection))\r\n        .then(dao => dao.listaTodos())  \r\n        .catch(erro=>{\r\n            console.log(erro);\r\n            throw new Error('Não foi possível obter as negociações!');\r\n        });\r\n\r\n    }\r\n\r\n    apaga(){\r\n        return ConnectionFactory.getConnection()\r\n        .then(connection=> new NegociacaoDao(connection))\r\n        .then(dao => dao.apagaTodos())\r\n        .then(() => 'Negociações apagadas com sucesso!')\r\n        .catch(erro => {\r\n            console.log(erro);\r\n            throw new Error('Não foi possível apagar as negociações!');\r\n        });\r\n    }\r\n\r\n\r\n    importa(listaAtual){\r\n        return this.obterNegociacoes()\r\n        .then(negociacoes =>\r\n            negociacoes.filter(negocicao =>\r\n                !listaAtual.negociacoes.some(negociacaoExistente =>\r\n                    JSON.stringify(negocicao) == JSON.stringify(negociacaoExistente)))\r\n        )\r\n        .catch(erro => {\r\n            console.log(erro);\r\n            throw new Error('Não foi possível buscar as negociações para importar!');\r\n        });\r\n    }\r\n\r\n}"]}